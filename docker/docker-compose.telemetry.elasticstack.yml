# Usage:
# docker compose --profile all up -d
# docker compose --profile elk up -d

services:
  elastic:
    image: elasticsearch:${ELASTICSEARCH_TAG}
    restart: unless-stopped
    stop_grace_period: 10s
    networks:
      - shared
      - opentelemetry
    volumes:
      - esdata01:/usr/share/elasticsearch/data
      - ../config/elk/new/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - 9200:9200
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: -Xms1g -Xmx1g
      ELASTIC_PASSWORD: elastic
      xpack.security.enabled: true # Necessary for APM
      xpack.security.authc.api_key.enabled: true # Necessary for APM
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
            "CMD-SHELL",
            "curl -u elastic:elastic http://localhost:9200 | grep -q 'You Know, for Search'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
    env_file:
      - ./envs/.env.elasticstack
    profiles:
      - all
      - elk

  kibana:
    depends_on:
      elastic:
        condition: service_healthy
    image: kibana:${KIBANA_TAG}
    restart: unless-stopped
    stop_grace_period: 10s
    networks:
      - shared
      - opentelemetry
    volumes:
      - kibanadata:/usr/share/kibana/data
      - ../config/elk/new/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_HOSTS=http://elastic:9200
      - ELASTICSEARCH_PASSWORD=elastic
    healthcheck:
      test:
        [
            "CMD-SHELL",
            "curl http://localhost:5601/api/status | grep -q '401'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
    env_file:
      - ./envs/.env.elasticstack
    profiles:
      - all
      - elk

  apm-server:
    image: elastic/apm-server:${APM_TAG}
    restart: on-failure
    networks:
      - shared
      - opentelemetry
    volumes:
      - ../config/elk/new/apm-server.yml:/usr/share/apm-server/apm-server.yml
    cap_add: ["ALL"]
    ports:
      - 8200:8200
    command: --strict.perms=false
    environment:
        - LOG_LEVEL=debug
    healthcheck:
      interval: 10s
      retries: 12
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8200/
    env_file:
      - ./envs/.env.elasticstack
    profiles:
      - all
      - elk

volumes:
  esdata01:
    driver: local
  kibanadata:
    driver: local

networks:
  shared:
    driver: bridge
  opentelemetry:
    external: true


#   logstash:
#     image: logstash:${LOGSTASH_TAG}
#     restart: unless-stopped
#     stop_grace_period: 10s
#     ports:
#       - ${LOGSTASH_PORT}:5044
#       - ${LOGSTASH_API_PORT}:9600
#     volumes:
#       - ../config/elk/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
#       - ../config/elk/pipeline:/usr/share/logstash/pipeline
#     networks:
#       - nw_elk
#     profiles:
#       - all
#       - elk

#   heartbeat:
#     image: elastic/heartbeat:${HEARTBEAT_TAG}
#     user: heartbeat
#     restart: unless-stopped
#     stop_grace_period: 10s
#     cap_add:
#       - NET_RAW
#     volumes:
#       - ../config/elk/heartbeat.yml:/usr/share/heartbeat/heartbeat.yml:ro
#     environment:
#       ELASTICSEARCH_HOSTS: elasticsearch:9200
#       KIBANA_HOSTS: kibana:5601
#     command: ["--strict.perms=false"]
#     networks:
#       - nw_elk
#     profiles:
#       - all
#       - elk

#   metricbeat:
#     image: elastic/metricbeat:${METRICBEAT_TAG}
#     user: root
#     restart: unless-stopped
#     stop_grace_period: 10s
#     cap_add:
#       - sys_ptrace
#       - dac_read_search
#     volumes:
#       - /var/run/docker.sock:/var/run/docker.sock:ro
#       - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
#       - /proc:/hostfs/proc:ro
#       - ../config/elk/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro
#     environment:
#       ELASTICSEARCH_HOSTS: elasticsearch:9200
#       KIBANA_HOSTS: kibana:5601
#     command: ["--strict.perms=false"]
#     networks:
#       - nw_elk
#     profiles:
#       - all
#       - elk

#   filebeat:
#     image: elastic/filebeat:${FILEBEAT_TAG}
#     user: root
#     restart: unless-stopped
#     stop_grace_period: 10s
#     volumes:
#       - /var/run/docker.sock:/var/run/docker.sock:ro
#       - /var/lib/docker/containers:/var/lib/docker/containers:ro
#       - ../config/elk/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
#     environment:
#       ELASTICSEARCH_HOSTS: elasticsearch:9200
#       KIBANA_HOSTS: kibana:5601
#     command: ["--strict.perms=false"]
#     networks:
#       - nw_elk
#     profiles:
#       - all
#       - elk

#   auditbeat:
#     image: elastic/auditbeat:${AUDITBEAT_TAG}
#     user: root
#     restart: unless-stopped
#     stop_grace_period: 10s
#     pid: host
#     cap_add:
#       - AUDIT_CONTROL
#       - AUDIT_READ
#     volumes:
#       - ../config/elk/auditbeat.yml:/usr/share/auditbeat/auditbeat.yml:ro
#     environment:
#       ELASTICSEARCH_HOSTS: elasticsearch:9200
#       KIBANA_HOSTS: kibana:5601
#       TINI_SUBREAPER: 1
#     command: ["--strict.perms=false"]
#     networks:
#       - nw_elk
#     profiles:
#       - all
#       - elk

# networks:
#   nw_elk:
#     driver: bridge

# volumes:
#   elasticsearch-data: {}